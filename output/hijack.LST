"File: hijack.asm    Assembler  Version 2.93      Page 1


   1  0000              ;___________________________________________________________________
   2  0000              ;___________________________________________________________________
   3  0000              ;Copyright :    2015 by HOLTEK SEMICONDUCTOR INC
   4  0000              ;File Name :    hijack.asm
   5  0000              ;Targer :       hijack TEST Board
   6  0000              ;MCU :          HT68F002
   7  0000              ;Version :      V00
   8  0000              ;Author :       ChenTing
   9  0000              ;Date :         2015/04/10
  10  0000              ;Description :  音頻通信程序測試
  11  0000              ;				音頻通信主要程序
  12  0000              ;History : 
  13  0000              ;___________________________________________________________________
  14  0000              ;___________________________________________________________________
  15  0000              include config.inc






  16  0000              include target.inc


  17  0000              include hijack.inc


  18  0000              ;#define IIC_Device_Addr_Default 0A0H
  19  0000              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  20  0000              ;@---------------------Library API------------------------------@
  21  0000              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  22  0000              EXTERN	F_EMI 		:BIT
  23  0000              EXTERN	R_STATUS 			:BYTE
  24  0000              EXTERN	R_ATEMP 			:BYTE
  25  0000               
  26  0000              public  _hijack_init
  27  0000              Public 	_hijack_Receive
  28  0000              public  _hijack_Send
  29  0000              
  30  0000              public	hijack_Send_Data_High
  31  0000              public	hijack_Send_Data_Low
  32  0000              public	hijack_Receive_DataH
  33  0000              public	hijack_Receive_DataL
  34  0000              
  35  0000              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  36  0000              ;@------------------------------DATA----------------------------@
  37  0000              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  38  0000              rambank 0  hijack_datal
  39  0000              hijack_datal	.section	'data'   
  40  0000              
  41  0000  00          hijack_Receive_DataH		DB	?
  42  0001  00          hijack_Receive_DataL		DB	?
  43  0002  00          hijack_Send_Data_High		DB	?
  44  0003  00          hijack_Send_Data_Low		DB	?
  45  0004  00          hijack_temp_Byte			DB	?
  46  0005  00          hijack_temp_count1			DB	?
  47  0006  00          hijack_temp_count2			DB	?
  48  0007  00          hijack_CCRP_count			DB	?
  49  0008  00          hijack_Rx_step				DB	?
"File: hijack.asm    Assembler  Version 2.93      Page 2

  50  0009  00          high_CCRA1_H				DB	?
  51  000A  00          high_CCRA1_L				DB	?
  52  000B  00          high_CCRA2_H				DB	?
  53  000C  00          high_CCRA2_L				DB	?
  54  000D  00          hijack_Period_H				DB	?
  55  000E  00          hijack_Period_L				DB	?
  56  000F  00          TEST_COUNT					DB	?
  57  0010  00          TEST_COUNT2					DB	?
  58  0011  00          TEST_COUNT3					DB	?
  59  0012  00          hijack_Idle_Count			DB	?
  60  0013  00          hijack_Rx_Count				DB	?
  61  0014  00          hijack_Rx_Parity_Count		DB	?
  62  0015              
  63  0015  00          F_First_CCRA				DBIT
  64  0015              F_hijack_Rx_Error			DBIT
  65  0015              F_hijack_Rx_Start			DBIT
  66  0015              F_CompleteRx1Bit			DBIT
  67  0015              F_0or1Bit					DBIT
  68  0015              F_PrepareMode				DBIT
  69  0015              F_IdleMode					DBIT
  70  0015              F_ByteMode					DBIT
  71  0016  00          F_hijackstartOk				DBIT
  72  0016              F_Parity_StopMode			DBIT
  73  0016              F_Parity_Ok					DBIT
  74  0016              F_Stop_idleMode				DBIT
  75  0016              F_First_Parity_StopMode		DBIT
  76  0017              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  77  0017              ;@-------------------------------CODE---------------------------@
  78  0017              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  79  0000              hijack_code	.section	'code' 
  80  0000              
  81  0000              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  82  0000              _hijack_Send PROC
  83  0000  3615        		CLR		IIC_SCL_IO;
  84  0001  3614        		CLR		IIC_SCL		;hijack發送數據的時候拉低SCL，不接收IICdata
  85  0002  380E        		SNZ		EMI
  86  0003  2800     R  		JMP		$1
  87  0004  3000     E  		SET		F_EMI
  88  0005  2800     R  		JMP		$2			
  89  0006              $1:		
  90  0006  3400     E  		CLR		F_EMI		
  91  0007  2800     R  		JMP		$2
  92  0008              $2:		
  93  0008  340E        		CLR		EMI		;關閉總中斷，防止其他程序打斷
  94  0009  3515        		CLR		hijack_channel_MIC_IO 
  95  000A  3114        		SET		hijack_channel_MIC
  96  000B              ;建立Bias信號 12bit 0
  97  000B  2000     R  		CALL	_hijack_Send_Bias		
  98  000C              ;idel信號     3bit  1
  99  000C  2000     R  		CALL	_hijack_Send_Idle
 100  000D              ;start信號	  1bit  0
 101  000D  2000     R  		CALL	_hijack_Send_Start				
 102  000E              ;發送2Byte data + 奇校驗
 103  000E  1F00     R   		CLR		hijack_temp_count2		;作為奇偶校驗位計數
 104  000F  0700     R  		MOV		A,hijack_Send_Data_High
 105  0010  0080     R  		MOV		hijack_temp_Byte,A
 106  0011  0700     R  		MOV		A,hijack_Send_Data_Low
 107  0012  0080     R  		MOV		hijack_temp_Byte,A		
 108  0013  2000     R  		CALL	_hijack_Send_Byte
 109  0014              				
"File: hijack.asm    Assembler  Version 2.93      Page 3

 110  0014              ;stop信號	  1bit 1
 111  0014  2000     R  		CALL	_hijack_Send_Stop
 112  0015              ;3bit結束信號
 113  0015  2000     R  		CALL	_hijack_Send_Idle
 114  0016              
 115  0016  3800     E  		SNZ		F_EMI
 116  0017  2800     R  		JMP		_hijack_Send_RET
 117  0018  300E        		SET		EMI			;開啟EMI，
 118  0019              _hijack_Send_RET:
 119  0019  3400     E  		CLR		F_EMI
 120  001A  0003        		RET 
 121  001B              _hijack_Send ENDP
 122  001B              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 123  001B              ;						_hijack_Receive	Start							@
 124  001B              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 125  001B              _hijack_Receive PROC
 126  001B              		PUSH
 127  001E  3800     R  		SNZ		F_hijack_Rx_Start
 128  001F  2800     R  		JMP		hijack_Normal_Mode
 129  0020              hijack_Rx_Mode:		
 130  0020  2000     R  		CALL	_hijack_Rx_1Bit		
 131  0021  2000     R  		CALL	_hijack_PrepareMode	
 132  0022  2000     R  		CALL	_hijack_StartIdleMode		
 133  0023  2000     R  		CALL	_hijack_Rx_Byte				
 134  0024  2000     R  		CALL	_hijack_Parity_StopMode
 135  0025  2000     R  		CALL	_hijack_ENDIdleMode
 136  0026              		
 137  0026  3800     R  		SNZ		F_hijack_Rx_Error
 138  0027  2800     R  		JMP		_hijack_Receive_RET
 139  0028  3400     R  		CLR		F_First_CCRA
 140  0029  3400     R  		CLR		F_hijack_Rx_Error
 141  002A  1F00     R  		CLR		TEST_COUNT
 142  002B  1F00     R  		CLR		TEST_COUNT2
 143  002C  3400     R  		CLR		F_ByteMode
 144  002D  3400     R  		CLR		F_CompleteRx1Bit
 145  002E  3400     R  		CLR		F_IdleMode
 146  002F  3400     R  		CLR		F_PrepareMode
 147  0030  3400     R  		CLR		F_hijack_Rx_Start
 148  0031  3400     R  		CLR		F_hijackstartOk
 149  0032  2800     R  		JMP		_hijack_Receive_RET
 150  0033              
 151  0033              
 152  0033              		
 153  0033              hijack_Normal_Mode:	
 154  0033  3A91        		SNZ		STMA0F
 155  0034  2800     R  		JMP		_hijack_Normal_CCRP_RET	;(not hijack Rx mode)& (not CCRA interrupt) = normal CCRP interrupt
 156  0035              ;;第一次進入CCRA中斷，初始化相關設置	init hijack Rx Value
 157  0035  0F08        		MOV		A,00001000B
 158  0036  0494        		XORM	A,PA
 159  0037  3691        		CLR		STMA0F		
 160  0038  3000     R  		SET		F_First_CCRA
 161  0039  1F00     R  		CLR		hijack_CCRP_count	
 162  003A  072D        		MOV		A,STM0AH					;Save CCRA value
 163  003B  0080     R  		MOV		high_CCRA1_H,A	;
 164  003C  072C        		MOV		A,STM0AL					;
 165  003D  0080     R  		MOV		high_CCRA1_L,A	;
 166  003E  1480     R  		INC		TEST_COUNT3
 167  003F  3000     R  		SET		F_hijack_Rx_Start
 168  0040  3000     R  		SET		F_PrepareMode
 169  0041  0F03        		MOV		A,3
"File: hijack.asm    Assembler  Version 2.93      Page 4

 170  0042  0080     R  		MOV		hijack_Idle_Count,A
 171  0043  3400     R  		CLR		F_hijack_Rx_Error				
 172  0044  2800     R  		JMP		_hijack_Receive_RET			
 173  0045              _hijack_Normal_CCRP_RET:
 174  0045  3A11        		SNZ		STMP0F					;CCRP_interrupt也不是 CCRP_interrupt中斷，錯誤
 175  0046  3000     R  		SET		F_hijack_Rx_Error
 176  0047  3611        		CLR		STMP0F		
 177  0048              _hijack_Receive_RET:
 178  0048              		
 179  0048              		POP		
 180  004B  0004        		RETI 
 181  004C              _hijack_Receive ENDP
 182  004C              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 183  004C              ;					_hijack_Receive	End		    						@
 184  004C              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 185  004C              _hijack_Parity_StopMode PROC
 186  004C  3800     R  		SNZ		F_Parity_StopMode
 187  004D  0003        		RET
 188  004E  3800     R  		SNZ		F_CompleteRx1Bit
 189  004F  0003        		RET
 190  0050  3400     R  		CLR		F_CompleteRx1Bit
 191  0051              		
 192  0051  3C00     R  		SZ		F_Parity_Ok
 193  0052  2800     R  		JMP		Stop_Deal					
 194  0053  3800     R  		SNZ		hijack_Rx_Parity_Count.0
 195  0054  2800     R  		JMP		Paritylow
 196  0055  2800     R  		JMP		ParityHigh
 197  0056              ParityHigh:	
 198  0056  3800     R  		SNZ		F_0or1Bit
 199  0057  2800     R  		JMP		_hijack_Parity_StopMode_Error
 200  0058  3000     R  		SET		F_Parity_Ok
 201  0059  2800     R  		JMP		_hijack_Parity_StopMode_RET					
 202  005A              ParityLow:		
 203  005A  3C00     R  		SZ		F_0or1Bit
 204  005B  2800     R  		JMP		_hijack_Parity_StopMode_Error
 205  005C  3000     R  		SET		F_Parity_Ok
 206  005D  2800     R  		JMP		_hijack_Parity_StopMode_RET			
 207  005E              Stop_Deal:
 208  005E  3400     R  		CLR		F_Parity_Ok
 209  005F  3800     R  		SNZ		F_0or1Bit
 210  0060  2800     R  		JMP		_hijack_Parity_StopMode_Error
 211  0061  3000     R  		SET		F_Stop_idleMode
 212  0062  0F03        		MOV		A,3
 213  0063  0080     R  		MOV		hijack_Idle_Count,A
 214  0064  3400     R  		CLR		F_Parity_StopMode				
 215  0065  2800     R  		JMP		_hijack_Parity_StopMode_RET
 216  0066              _hijack_Parity_StopMode_Error:
 217  0066  3000     R  		SET		F_hijack_Rx_Error
 218  0067  0003        		RET	
 219  0068              _hijack_Parity_StopMode_RET:			
 220  0068  0003        		RET
 221  0069              _hijack_Parity_StopMode ENDP
 222  0069              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 223  0069              _hijack_PrepareMode PROC
 224  0069  3800     R  		SNZ		F_PrepareMode
 225  006A  0003        		RET
 226  006B  3800     R  		SNZ		F_CompleteRx1Bit
 227  006C  0003        		RET
 228  006D              ;		INC		TEST_COUNT2
 229  006D  3400     R  		CLR		F_CompleteRx1Bit
"File: hijack.asm    Assembler  Version 2.93      Page 5

 230  006E              ;Idle		
 231  006E  3800     R  		SNZ		F_0or1Bit
 232  006F  0003        		RET
 233  0070  3400     R  		CLR		F_PrepareMode
 234  0071  3000     R  		SET		F_IdleMode
 235  0072  0003        		RET
 236  0073              _hijack_PrepareMode ENDP
 237  0073              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 238  0073              _hijack_StartIdleMode PROC
 239  0073  3800     R  		SNZ		F_IdleMode
 240  0074  0003        		RET
 241  0075              ;Idle		
 242  0075  3800     R  		SNZ		F_CompleteRx1Bit
 243  0076  0003        		RET
 244  0077  3400     R  		CLR		F_CompleteRx1Bit
 245  0078  1780     R  		SDZ		hijack_Idle_Count
 246  0079  2800     R  		JMP		$1
 247  007A              $0:		
 248  007A  3C00     R  		SZ		F_0or1Bit
 249  007B  2800     R  		JMP		$2
 250  007C  3400     R  		CLR		F_IdleMode
 251  007D  3000     R  		SET		F_ByteMode
 252  007E  0003        		RET
 253  007F              $2:		
 254  007F  3000     R  		SET		F_hijack_Rx_Error	;第四bit 還是1，錯誤
 255  0080  0003        		RET
 256  0081              $1:		
 257  0081  3C00     R  		SZ		F_0or1Bit		
 258  0082  0003        		RET						
 259  0083  3000     R  		SET		F_hijack_Rx_Error	;3bit 1 Idle 不夠
 260  0084  0003        		RET				
 261  0085              _hijack_StartIdleMode ENDP
 262  0085              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 263  0085              _hijack_ENDIdleMode PROC
 264  0085  3800     R  		SNZ		F_Stop_idleMode
 265  0086  0003        		RET
 266  0087  3800     R  		SNZ		F_CompleteRx1Bit
 267  0088  0003        		RET
 268  0089  3400     R  		CLR		F_CompleteRx1Bit
 269  008A  1480     R  		INC		TEST_COUNT
 270  008B  1780     R  		SDZ		hijack_Idle_Count
 271  008C  2800     R  		JMP		$1
 272  008D              $0:		
 273  008D  3C00     R  		SZ		F_0or1Bit
 274  008E              		
 275  008E  3400     R  		CLR		F_IdleMode
 276  008F  3000     R  		SET		F_ByteMode
 277  0090  0003        		RET
 278  0091              $2:		
 279  0091  3000     R  		SET		F_hijack_Rx_Error	;第四bit 還是1，錯誤
 280  0092  0003        		RET
 281  0093              $1:		
 282  0093              
 283  0093  3C00     R  		SZ		F_0or1Bit		
 284  0094  0003        		RET						
 285  0095  3000     R  		SET		F_hijack_Rx_Error	;3bit 1 Idle 不夠
 286  0096  0003        		RET					
 287  0097              _hijack_ENDIdleMode ENDP
 288  0097              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 289  0097              _hijack_Rx_Byte PROC
"File: hijack.asm    Assembler  Version 2.93      Page 6

 290  0097  3800     R  		SNZ		F_ByteMode
 291  0098  0003        		RET
 292  0099  3800     R  		SNZ		F_CompleteRx1Bit
 293  009A  0003        		RET
 294  009B  3400     R  		CLR		F_CompleteRx1Bit		
 295  009C  3800     R  		SNZ		F_hijackstartOk
 296  009D  2800     R  		JMP		$0
 297  009E  2800     R  		JMP		hijack_Rx_ByteEnter
 298  009F              $0:
 299  009F  3800     R  		SNZ		F_0or1Bit
 300  00A0  2800     R  		JMP		$1
 301  00A1  3000     R  		SET		F_hijack_Rx_Error
 302  00A2  0003        		RET
 303  00A3              $1:
 304  00A3  3000     R  		SET		F_hijackstartOk
 305  00A4  0F10        		MOV		A,16
 306  00A5  0080     R  		MOV		hijack_Rx_Count,A
 307  00A6  1F00     R  		CLR		hijack_Receive_DataH
 308  00A7  1F00     R  		CLR		hijack_Receive_DataL
 309  00A8  1F00     R  		CLR		hijack_Rx_Parity_Count
 310  00A9  0003        		RET										
 311  00AA              hijack_Rx_ByteEnter:
 312  00AA  1780     R  		SDZ 	hijack_Rx_Count 	;16bit值是否已經讀取完成	
 313  00AB  2800     R  		JMP		hijack_Rx_Byte_LOOP
 314  00AC  3000     R  		SET		F_CompleteRx1Bit
 315  00AD  3000     R  		SET		F_Parity_StopMode	;進入下一個模式
 316  00AE  3400     R  		CLR		F_ByteMode			
 317  00AF  0003        		RET
 318  00B0              hijack_Rx_Byte_LOOP:
 319  00B0  340A        		CLR		C
 320  00B1  1A80     R  		RLC		hijack_Receive_DataL
 321  00B2  1A80     R  		RLC		hijack_Receive_DataH		
 322  00B3              		
 323  00B3  3800     R  		SNZ		F_0or1Bit
 324  00B4  2800     R  		JMP		hijack_Low
 325  00B5  2800     R  		JMP		hijack_High
 326  00B6              hijack_High:
 327  00B6  1480     R  		INC		hijack_Rx_Parity_Count
 328  00B7  3000     R  		SET		hijack_Receive_DataL.0
 329  00B8  2800     R  		JMP		hijack_Next_Bit
 330  00B9              hijack_Low:
 331  00B9  3400     R  		CLR		hijack_Receive_DataL.0
 332  00BA              hijack_Next_Bit:
 333  00BA  0003        		RET
 334  00BB              _hijack_Rx_Byte ENDP
 335  00BB              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 336  00BB              _hijack_Rx_1Bit PROC
 337  00BB  3A11        		SNZ		STMP0F
 338  00BC  2800     R  		JMP		CCRA_interrupt
 339  00BD              CCRP_interrupt:					
 340  00BD  3611        		CLR		STMP0F
 341  00BE  1480     R  		INC		hijack_CCRP_count
 342  00BF  0700     R  		MOV		A,hijack_CCRP_count
 343  00C0  0C28        		XOR		A,hijack_Time_Out		
 344  00C1  390A        		SNZ		Z
 345  00C2  0003        		RET
 346  00C3  2800     R  		JMP		_hijack_Rx_1Bit_Error ;超出時間，錯誤
 347  00C4              CCRA_interrupt:
 348  00C4  3A91        		SNZ		STMA0F
 349  00C5  2800     R  		JMP		_hijack_Rx_1Bit_Error ;不是CCRA 中斷也不是CCRP中斷，錯誤
"File: hijack.asm    Assembler  Version 2.93      Page 7

 350  00C6  3691        		CLR		STMA0F
 351  00C7              ;		INC		TEST_COUNT
 352  00C7  0F08        		MOV		A,00001000B
 353  00C8  0494        		XORM	A,PA
 354  00C9  3C00     R  		SZ		F_First_CCRA
 355  00CA  2800     R  		JMP		Second_CCRA
 356  00CB              First_CCRA:	;第一次CCRA中斷 上升沿									
 357  00CB  3000     R  		SET		F_First_CCRA
 358  00CC  072D        		MOV		A,STM0AH					;Save CCRA value
 359  00CD  0080     R  		MOV		high_CCRA1_H,A	
 360  00CE  072C        		MOV		A,STM0AL					
 361  00CF  0080     R  		MOV		high_CCRA1_L,A	
 362  00D0  0700     R  		MOV		A,hijack_CCRP_count
 363  00D1  0080     R  		MOV		hijack_Period_L,A			;保存CCRP 的計數值
 364  00D2  1F00     R  		CLR		hijack_CCRP_count
 365  00D3              ;		INC		TEST_COUNT
 366  00D3              ;計算週期
 367  00D3              ;N x 512-high_First_CCRA_Count + high_Second_CCRA_Count
 368  00D3              if stmCCRP_T==512
 369  00D3  0F09        		MOV		A,9
 370  00D4  0080     R  		MOV		hijack_temp_count1,A 		;根據CCRP 的值修改移位的值
 371  00D5              endif
 372  00D5              if stmCCRP_T==256
 373  00D5              		MOV		A,8
 374  00D5              		MOV		hijack_temp_count1,A 		;根據CCRP 的值修改移位的值
 375  00D5              endif
 376  00D5              $0:
 377  00D5  340A        		CLR		C 							;移位進行乘法運算
 378  00D6  1A80     R  		RLC		hijack_Period_L
 379  00D7  1A80     R  		RLC		hijack_Period_H	
 380  00D8  1780     R  		SDZ		hijack_temp_count1
 381  00D9  2800     R  		JMP		$0		
 382  00DA  340A        		CLR		C							
 383  00DB  0700     R  		MOV		A,high_CCRA1_L				;加上第二次取得的CCRA 的值
 384  00DC  0380     R  		ADDM	A,hijack_Period_L
 385  00DD  0700     R  		MOV		A,high_CCRA1_H
 386  00DE  1380     R  		ADCM	A,hijack_Period_H		
 387  00DF  340A        		CLR		C 
 388  00E0  0700     R  		MOV		A,hijack_Period_L			;減去第一次取得的 CCRA 的值
 389  00E1  0200     R  		SUB		A,high_CCRA2_L
 390  00E2  0080     R  		MOV		hijack_Period_L,A
 391  00E3  0700     R  		MOV		A,hijack_Period_H
 392  00E4  1200     R  		SBC		A,high_CCRA2_H
 393  00E5  0080     R  		MOV		hijack_Period_H,A		
 394  00E6              
 395  00E6  2800     R  		JMP		hijack_Period					
 396  00E7              Second_CCRA:;第二次CCRA中斷 上升沿
 397  00E7  3400     R  		CLR		F_First_CCRA
 398  00E8  072D        		MOV		A,STM0AH					;Save CCRA value
 399  00E9  0080     R  		MOV		high_CCRA2_H,A	;
 400  00EA  072C        		MOV		A,STM0AL					;
 401  00EB  0080     R  		MOV		high_CCRA2_L,A	;
 402  00EC  0700     R  		MOV		A,hijack_CCRP_count
 403  00ED  0080     R  		MOV		hijack_Period_L,A			;保存CCRP 的計數值
 404  00EE  1F00     R  		CLR		hijack_CCRP_count
 405  00EF              ;		INC		TEST_COUNT		
 406  00EF              ;計算週期
 407  00EF              ;N x 512-high_First_CCRA_Count + high_Second_CCRA_Count
 408  00EF              if stmCCRP_T==512
 409  00EF  0F09        		MOV		A,9
"File: hijack.asm    Assembler  Version 2.93      Page 8

 410  00F0  0080     R  		MOV		hijack_temp_count1,A 		;根據CCRP 的值修改移位的值
 411  00F1              endif
 412  00F1              if stmCCRP_T==256
 413  00F1              		MOV		A,8
 414  00F1              		MOV		hijack_temp_count1,A 		;根據CCRP 的值修改移位的值
 415  00F1              endif
 416  00F1              $0:
 417  00F1  340A        		CLR		C 							;移位進行乘法運算
 418  00F2  1A80     R  		RLC		hijack_Period_L
 419  00F3  1A80     R  		RLC		hijack_Period_H	
 420  00F4  1780     R  		SDZ		hijack_temp_count1
 421  00F5  2800     R  		JMP		$0		
 422  00F6  340A        		CLR		C							
 423  00F7  0700     R  		MOV		A,high_CCRA2_L				;加上第二次取得的CCRA 的值
 424  00F8  0380     R  		ADDM	A,hijack_Period_L
 425  00F9  0700     R  		MOV		A,high_CCRA2_H
 426  00FA  1380     R  		ADCM	A,hijack_Period_H		
 427  00FB  340A        		CLR		C 
 428  00FC  0700     R  		MOV		A,hijack_Period_L			;減去第一次取得的 CCRA 的值
 429  00FD  0200     R  		SUB		A,high_CCRA1_L
 430  00FE  0080     R  		MOV		hijack_Period_L,A
 431  00FF  0700     R  		MOV		A,hijack_Period_H
 432  0100  1200     R  		SBC		A,high_CCRA1_H
 433  0101  0080     R  		MOV		hijack_Period_H,A		
 434  0102              hijack_Period:		
 435  0102              ;判斷是否是0
 436  0102              hijack_Period_0:
 437  0102              ;		INC		TEST_COUNT				
 438  0102  0700     R  		MOV		A,hijack_Period_H
 439  0103  0C05        		XOR		A,5					;hijack_Period0_Max 高八位
 440  0104  390A        		SNZ		Z
 441  0105  2800     R  		JMP		hijack_Period_1				;高Byte不相等，判斷是否為Bit 1
 442  0106              ;高位相等，判斷低八位是否在容差範圍內		
 443  0106  0700     R          MOV     A,hijack_Period_L
 444  0107  0AD5                SUB     A,94H +Tolerance 
 445  0108  3C0A                SZ      C		
 446  0109  2800     R  		JMP		_hijack_Rx_1Bit_Error		;週期太大錯誤
 447  010A  0700     R          MOV     A,hijack_Period_L
 448  010B  0A53                SUB     A,94H - Tolerance 
 449  010C  380A                SNZ      C			
 450  010D  2800     R  		JMP		_hijack_Rx_1Bit_Error		;週期太小錯誤
 451  010E  3400     R  		CLR		F_0or1Bit					;由週期判斷為Bit 0
 452  010F  2800     R  		JMP		_hijack_Rx_1Bit_RET
 453  0110              hijack_Period_1:	;是否在294H~316H之間		
 454  0110  0700     R  		MOV		A,hijack_Period_H
 455  0111  0C02        		XOR		A,2					;hijack_Period1_Max 高八位
 456  0112  3D0A        		SZ		Z
 457  0113  2800     R  		JMP		highByte2				;==2，判斷是否在294~300之間
 458  0114              ;是否==3
 459  0114  0700     R  		MOV		A,hijack_Period_H
 460  0115  0C03        		XOR		A,3					;hijack_Period1_Max 高八位
 461  0116  3D0A        		SZ		Z
 462  0117  2800     R  		JMP		highByte3	
 463  0118  2800     R  		JMP		_hijack_Rx_1Bit_Error	;高Byte既不是2也不是3，錯誤
 464  0119              highByte3: ;300~316H
 465  0119  0700     R          MOV     A,hijack_Period_L
 466  011A  0A16                SUB     A,016H
 467  011B  3C0A                SZ      C
 468  011C  2800     R          JMP		_hijack_Rx_1Bit_Error
 469  011D  2800     R          JMP		thisis1		
"File: hijack.asm    Assembler  Version 2.93      Page 9

 470  011E              highByte2:		
 471  011E              ;294H~300H之間
 472  011E  0700     R          MOV     A,hijack_Period_L
 473  011F  0A94                SUB     A,094H
 474  0120  380A                SNZ      C
 475  0121  2800     R          JMP		_hijack_Rx_1Bit_Error
 476  0122  2800     R          JMP		thisis1
 477  0123              thisis1:
 478  0123  3000     R  		SET		F_0or1Bit
 479  0124  2800     R  		JMP		_hijack_Rx_1Bit_RET				
 480  0125              
 481  0125              _hijack_Rx_1Bit_RET:
 482  0125  3000     R  		SET		F_CompleteRx1Bit		
 483  0126  0003        		RET
 484  0127              _hijack_Rx_1Bit_Error:
 485  0127  3000     R  		SET		F_hijack_Rx_Error		;CCRP 連續發生的次數超過設定值(週期時間太長 Error)
 486  0128  0003        		RET								;置錯誤標誌位
 487  0129              _hijack_Rx_1Bit ENDP
 488  0129              
 489  0129              
 490  0129              
 491  0129              	
 492  0129              
 493  0129              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 494  0129              _hijack_init PROC
 495  0129              if stmCCRP_T==512
 496  0129  0F04        		MOV		A,00000100B	;4/fsys  512 CCRP interrput
 497  012A  00A8        		MOV		STM0C0,A
 498  012B              endif
 499  012B              if stmCCRP_T==256
 500  012B              		MOV		A,00000010B	;4/fsys  512 CCRP interrput
 501  012B              		MOV		STM0C0,A
 502  012B              endif	
 503  012B  0F40        		MOV		A,01000000B	;輸入捕捉模式、上升沿觸發、P 清除time
 504  012C  00A9        		MOV		STM0C1,A
 505  012D              		
 506  012D  3315        		SET		hijack_channel_L_IO
 507  012E  3714        		CLR		hijack_channel_L
 508  012F              		
 509  012F  3618        		CLR		STP0IPS		;STP0I on PA6
 510  0130              		
 511  0130  3091        		SET		STMA0E		;開啟Timer 輸入捕捉模式中斷
 512  0131  3011        		SET		STMP0E
 513  0132  300F        		SET		MF0E
 514  0133  360F        		CLR		MF0F
 515  0134  3691        		CLR		STMA0F
 516  0135  3611        		CLR		STMP0F
 517  0136  31A8        		SET		ST0ON
 518  0137  300E        		SET		EMI
 519  0138  0003        		RET
 520  0139              _hijack_init ENDP
 521  0139              
 522  0139              
 523  0139              
 524  0139              
 525  0139              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 526  0139              _hijack_Send_Byte PROC
 527  0139              ;		local temp  D
 528  0139  3514         		CLR		hijack_channel_MIC
 529  013A  0F08         		MOV		A,8 ;SET 8 BIT COUNTER
"File: hijack.asm    Assembler  Version 2.93      Page 10

 530  013B  0080     R   		MOV		hijack_temp_count1,A
 531  013C              hijack_send_8bitloop:
 532  013C  3C00     R  		SZ		hijack_temp_Byte.7
 533  013D  2800     R  		JMP		hijack_send_high
 534  013E  2800     R  		JMP		hijack_send_low
 535  013F              hijack_send_high:
 536  013F  1480     R  		INC		hijack_temp_count2		;奇校驗
 537  0140  3114        		SET		hijack_channel_MIC
 538  0141              		DELAY	fskDelaycount1/3		;Delay延遲了3倍，so fskDelaycount0/3為正確值
 539  0145  3514        		CLR		hijack_channel_MIC
 540  0146              		DELAY	fskDelaycount1/3		;Delay延遲了3倍，so fskDelaycount0/3為正確值
 541  014A  2800     R  		JMP		hijack_send_Next_Bit	
 542  014B              hijack_send_low:		
 543  014B  3114        		SET		hijack_channel_MIC	;
 544  014C              		DELAY	fskDelaycount0/3		;Delay延遲了3倍，so fskDelaycount0/3為正確值
 545  0150  3514        		CLR		hijack_channel_MIC
 546  0151              		DELAY	fskDelaycount0/3		;Delay延遲了3倍，so fskDelaycount0/3為正確值 		
 547  0155              hijack_send_Next_Bit:
 548  0155  1880     R  		RL		hijack_temp_Byte
 549  0156  1780     R  		SDZ		hijack_temp_count1
 550  0157  2800     R  		JMP		hijack_send_8bitloop
 551  0158              
 552  0158              _hijack_Send_Byte_RET:
 553  0158  0003        		RET 
 554  0159              _hijack_Send_Byte ENDP
 555  0159              ;;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@	
 556  0159              hijack_send_odd_Bit PROC
 557  0159  3C00     R  		SZ		hijack_temp_count2.0
 558  015A  2800     R  		JMP		hijack_send_odd_Bit_Low
 559  015B              ;		JMP		hijack_odd_Bit_high	
 560  015B              hijack_send_odd_Bit_high:
 561  015B  3114        		SET		hijack_channel_MIC
 562  015C              		DELAY	fskDelaycount1/3		;Delay延遲了3倍，so fskDelaycount0/3為正確值
 563  0160  3514        		CLR		hijack_channel_MIC
 564  0161              		DELAY	fskDelaycount1/3		;Delay延遲了3倍，so fskDelaycount0/3為正確值
 565  0165  2800     R  		JMP		hijack_send_odd_Bit_RET		
 566  0166              hijack_send_odd_Bit_Low:
 567  0166  3114        		SET		hijack_channel_MIC	;
 568  0167              		DELAY	fskDelaycount0/3		;Delay延遲了3倍，so fskDelaycount0/3為正確值
 569  016B  3514        		CLR		hijack_channel_MIC
 570  016C              		DELAY	fskDelaycount0/3		;Delay延遲了3倍，so fskDelaycount0/3為正確值
 571  0170              hijack_send_odd_Bit_RET:
 572  0170  0003        		RET 							
 573  0171              hijack_send_odd_Bit ENDP
 574  0171              ;;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 575  0171              _hijack_Send_Bias PROC
 576  0171              ;用於先建立bias
 577  0171  0F0C         		MOV		A,12 ;SET 8 BIT COUNTER
 578  0172  0080     R   		MOV		hijack_temp_count1,A
 579  0173              $1:		
 580  0173  3114        		SET		hijack_channel_MIC	;
 581  0174              		DELAY	fskDelaycount0/3		;Delay延遲了3倍，so fskDelaycount0/3為正確值
 582  0178  3514        		CLR		hijack_channel_MIC
 583  0179              		DELAY	fskDelaycount0/3		;Delay延遲了3倍，so fskDelaycount0/3為正確值 		
 584  017D  1780     R  		SDZ		hijack_temp_count1
 585  017E  2800     R  		JMP		$1					
 586  017F  0003        		RET
 587  0180              _hijack_Send_Bias ENDP
 588  0180              ;;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 589  0180              _hijack_Send_Idle PROC
"File: hijack.asm    Assembler  Version 2.93      Page 11

 590  0180              ;,3bit 1頻率的idle信號，用於信號發送的開始和結束
 591  0180  0F03         		MOV		A,3 					;SET 8 BIT COUNTER
 592  0181  0080     R   		MOV		hijack_temp_count1,A
 593  0182              $1: 		
 594  0182  3114        		SET		hijack_channel_MIC	;
 595  0183              		DELAY	fskDelaycount1/3		;Delay延遲了3倍，so fskDelaycount0/3為正確值
 596  0187  3514        		CLR		hijack_channel_MIC
 597  0188              		DELAY	fskDelaycount1/3		;Delay延遲了3倍，so fskDelaycount0/3為正確值
 598  018C  1780     R  		SDZ		hijack_temp_count1
 599  018D  2800     R  		JMP		$1
 600  018E  0003        		RET	
 601  018F              _hijack_Send_Idle ENDP
 602  018F              ;;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 603  018F              _hijack_Send_Start PROC
 604  018F              ;1bit 0頻率 用於開始信號,		
 605  018F  3114        		SET		hijack_channel_MIC	;
 606  0190              		DELAY	fskDelaycount0/3		;Delay延遲了3倍，so fskDelaycount0/3為正確值
 607  0194  3514        		CLR		hijack_channel_MIC
 608  0195              		DELAY	fskDelaycount0/3		;Delay延遲了3倍，so fskDelaycount0/3為正確值
 609  0199  0003        		RET	
 610  019A              _hijack_Send_Start ENDP
 611  019A              ;;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 612  019A              _hijack_Send_Stop PROC
 613  019A              ;1bit 1頻率用於結束信號,		
 614  019A  3114        		SET		hijack_channel_MIC	;
 615  019B              		DELAY	fskDelaycount1/3		;Delay延遲了3倍，so fskDelaycount0/3為正確值
 616  019F  3514        		CLR		hijack_channel_MIC
 617  01A0              		DELAY	fskDelaycount1/3		;Delay延遲了3倍，so fskDelaycount0/3為正確值
 618  01A4  0003        		RET	
 619  01A5              _hijack_Send_Stop ENDP


        0 Errors, 0 Warnings