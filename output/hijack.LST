"File: hijack.asm    Assembler  Version 2.93      Page 1


   1  0000              ;___________________________________________________________________
   2  0000              ;___________________________________________________________________
   3  0000              ;Copyright :    2015 by HOLTEK SEMICONDUCTOR INC
   4  0000              ;File Name :    hijack.asm
   5  0000              ;Targer :       hijack TEST Board
   6  0000              ;MCU :          HT68F002
   7  0000              ;Version :      V00
   8  0000              ;Author :       ChenTing
   9  0000              ;Date :         2015/04/10
  10  0000              ;Description :  音頻通信程序測試
  11  0000              ;				音頻通信主要程序
  12  0000              ;History : 
  13  0000              ;___________________________________________________________________
  14  0000              ;___________________________________________________________________
  15  0000              include config.inc






  16  0000              include target.inc


  17  0000              include hijack.inc


  18  0000              
  19  0000              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  20  0000              ;@---------------------Library API------------------------------@
  21  0000              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  22  0000              EXTERN	F_EMI 				:BIT
  23  0000              EXTERN	R_STATUS 			:BYTE
  24  0000              EXTERN	R_ATEMP 			:BYTE
  25  0000              EXTERN	IIC_RXok_Flag		:BIT
  26  0000              
  27  0000              public  _hijack_init
  28  0000              Public 	_hijack_Receive
  29  0000              public  _hijack_Send
  30  0000              
  31  0000              public	Hijack_RxOk_Flag
  32  0000              public	hijack_Send_Data_High
  33  0000              public	hijack_Send_Data_Low
  34  0000              public	hijack_Receive_DataH
  35  0000              public	hijack_Receive_DataL
  36  0000              
  37  0000              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  38  0000              ;@------------------------------DATA----------------------------@
  39  0000              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  40  0000              rambank 0  hijack_datal
  41  0000              hijack_datal	.section	'data'   
  42  0000              
  43  0000  00          hijack_Receive_DataH		DB	?
  44  0001  00          hijack_Receive_DataL		DB	?
  45  0002  00          hijack_Send_Data_High		DB	?
  46  0003  00          hijack_Send_Data_Low		DB	?
  47  0004  00          hijack_temp_Byte			DB	?
  48  0005  00          hijack_temp_count1			DB	?
  49  0006  00          hijack_temp_count2			DB	?
"File: hijack.asm    Assembler  Version 2.93      Page 2

  50  0007  00          hijack_CCRP_count			DB	?
  51  0008  00          hijack_Rx_step				DB	?
  52  0009  00          high_CCRA1_H				DB	?
  53  000A  00          high_CCRA1_L				DB	?
  54  000B  00          high_CCRA2_H				DB	?
  55  000C  00          high_CCRA2_L				DB	?
  56  000D  00          hijack_Period_H				DB	?
  57  000E  00          hijack_Period_L				DB	?
  58  000F  00          TEST_COUNT					DB	?
  59  0010  00          TEST_COUNT2					DB	?
  60  0011  00          TEST_COUNT3					DB	?
  61  0012  00          hijack_Idle_Count			DB	?
  62  0013  00          hijack_Rx_Count				DB	?
  63  0014  00          hijack_Rx_Parity_Count		DB	?
  64  0015              
  65  0015  00          F_First_CCRA				DBIT
  66  0015              F_hijack_Rx_Error			DBIT
  67  0015              F_hijack_Rx_Start			DBIT
  68  0015              F_CompleteRx1Bit			DBIT
  69  0015              F_0or1Bit					DBIT
  70  0015              F_PrepareMode				DBIT
  71  0015              F_IdleMode					DBIT
  72  0015              F_ByteMode					DBIT
  73  0016  00          F_hijackstartOk				DBIT
  74  0016              F_Parity_StopMode			DBIT
  75  0016              F_Parity_Ok					DBIT
  76  0016              F_Stop_idleMode				DBIT
  77  0016              F_First_Parity_StopMode		DBIT
  78  0017              
  79  0016              Hijack_RxOk_Flag			DBIT
  80  0017              
  81  0017              
  82  0017              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  83  0017              ;@-------------------------------CODE---------------------------@
  84  0017              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  85  0000              hijack_code	.section	'code' 
  86  0000              
  87  0000              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  88  0000              _hijack_Send PROC
  89  0000  3400     E  		CLR		IIC_RXok_Flag
  90  0001  3615        		CLR		IIC_SCL_IO;
  91  0002  3614        		CLR		IIC_SCL		;hijack發送數據的時候拉低SCL，不接收IICdata
  92  0003  380E        		SNZ		EMI
  93  0004  2800     R  		JMP		$1
  94  0005  3000     E  		SET		F_EMI
  95  0006  2800     R  		JMP		$2			
  96  0007              $1:		
  97  0007  3400     E  		CLR		F_EMI		
  98  0008  2800     R  		JMP		$2
  99  0009              $2:		
 100  0009  340E        		CLR		EMI		;關閉總中斷，防止其他程序打斷
 101  000A  3515        		CLR		hijack_channel_MIC_IO 
 102  000B  3114        		SET		hijack_channel_MIC
 103  000C              ;建立Bias信號 12bit 0
 104  000C  2000     R  		CALL	_hijack_Send_Bias		
 105  000D              ;idel信號     3bit  1
 106  000D  2000     R  		CALL	_hijack_Send_Idle
 107  000E              ;start信號	  1bit  0
 108  000E  2000     R  		CALL	_hijack_Send_Start				
 109  000F              ;發送2Byte data + 奇校驗
"File: hijack.asm    Assembler  Version 2.93      Page 3

 110  000F  1F00     R   		CLR		hijack_temp_count2		;作為奇偶校驗位計數
 111  0010  0700     R  		MOV		A,hijack_Send_Data_High
 112  0011  0080     R  		MOV		hijack_temp_Byte,A
 113  0012  2000     R  		CALL	_hijack_Send_Byte
 114  0013  0700     R  		MOV		A,hijack_Send_Data_Low
 115  0014  0080     R  		MOV		hijack_temp_Byte,A		
 116  0015  2000     R  		CALL	_hijack_Send_Byte
 117  0016              				
 118  0016              ;stop信號	  1bit 1
 119  0016  2000     R  		CALL	_hijack_Send_Stop
 120  0017              ;3bit結束信號
 121  0017  2000     R  		CALL	_hijack_Send_Idle
 122  0018              
 123  0018  3800     E  		SNZ		F_EMI
 124  0019  2800     R  		JMP		_hijack_Send_RET
 125  001A  300E        		SET		EMI			;開啟EMI，
 126  001B              _hijack_Send_RET:
 127  001B  3215        		SET		IIC_SCL_IO;
 128  001C  3214        		SET		IIC_SCL		;hijack發送數據的時候拉低SCL，不接收IICdata
 129  001D  3400     E  		CLR		F_EMI
 130  001E  0003        		RET 
 131  001F              _hijack_Send ENDP
 132  001F              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 133  001F              ;						_hijack_Receive	Start							@
 134  001F              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 135  001F              _hijack_Receive PROC
 136  001F              		PUSH
 137  0022  3800     R  		SNZ		F_hijack_Rx_Start
 138  0023  2800     R  		JMP		hijack_Normal_Mode
 139  0024              hijack_Rx_Mode:		
 140  0024  2000     R  		CALL	_hijack_Rx_1Bit		
 141  0025  2000     R  		CALL	_hijack_PrepareMode	
 142  0026  2000     R  		CALL	_hijack_StartIdleMode		
 143  0027  2000     R  		CALL	_hijack_Rx_Byte				
 144  0028  2000     R  		CALL	_hijack_Parity_StopMode
 145  0029  2000     R  		CALL	_hijack_ENDIdleMode
 146  002A              		
 147  002A  3800     R  		SNZ		F_hijack_Rx_Error
 148  002B  2800     R  		JMP		_hijack_Receive_RET
 149  002C  3400     R  		CLR		F_First_CCRA
 150  002D  3400     R  		CLR		F_hijack_Rx_Error
 151  002E  1F00     R  		CLR		TEST_COUNT
 152  002F  1F00     R  		CLR		TEST_COUNT2
 153  0030  3400     R  		CLR		F_ByteMode
 154  0031  3400     R  		CLR		F_CompleteRx1Bit
 155  0032  3400     R  		CLR		F_IdleMode
 156  0033  3400     R  		CLR		F_PrepareMode
 157  0034  3400     R  		CLR		F_hijack_Rx_Start
 158  0035  3400     R  		CLR		F_hijackstartOk
 159  0036  2800     R  		JMP		_hijack_Receive_RET
 160  0037              
 161  0037              
 162  0037              		
 163  0037              hijack_Normal_Mode:	
 164  0037  3A91        		SNZ		STMA0F
 165  0038  2800     R  		JMP		_hijack_Normal_CCRP_RET	;(not hijack Rx mode)& (not CCRA interrupt) = normal CCRP interrupt
 166  0039              ;;第一次進入CCRA中斷，初始化相關設置	init hijack Rx Value
 167  0039  0F08        		MOV		A,00001000B
 168  003A  0494        		XORM	A,PA
 169  003B  3691        		CLR		STMA0F		
"File: hijack.asm    Assembler  Version 2.93      Page 4

 170  003C  3000     R  		SET		F_First_CCRA
 171  003D              ;		CLR		Hijack_RxOk_Flag
 172  003D  1F00     R  		CLR		hijack_CCRP_count	
 173  003E  072D        		MOV		A,STM0AH					;Save CCRA value
 174  003F  0080     R  		MOV		high_CCRA1_H,A	;
 175  0040  072C        		MOV		A,STM0AL					;
 176  0041  0080     R  		MOV		high_CCRA1_L,A	;
 177  0042  1480     R  		INC		TEST_COUNT3
 178  0043  3000     R  		SET		F_hijack_Rx_Start
 179  0044  3000     R  		SET		F_PrepareMode
 180  0045  0F03        		MOV		A,3
 181  0046  0080     R  		MOV		hijack_Idle_Count,A
 182  0047  3400     R  		CLR		F_hijack_Rx_Error				
 183  0048  2800     R  		JMP		_hijack_Receive_RET			
 184  0049              _hijack_Normal_CCRP_RET:
 185  0049  3A11        		SNZ		STMP0F					;CCRP_interrupt也不是 CCRP_interrupt中斷，錯誤
 186  004A  3000     R  		SET		F_hijack_Rx_Error
 187  004B  3611        		CLR		STMP0F		
 188  004C              _hijack_Receive_RET:
 189  004C              		
 190  004C              		POP		
 191  004F  0004        		RETI 
 192  0050              _hijack_Receive ENDP
 193  0050              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 194  0050              ;					_hijack_Receive	End		    						@
 195  0050              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 196  0050              _hijack_Parity_StopMode PROC
 197  0050  3800     R  		SNZ		F_Parity_StopMode
 198  0051  0003        		RET
 199  0052  3800     R  		SNZ		F_CompleteRx1Bit
 200  0053  0003        		RET
 201  0054  3400     R  		CLR		F_CompleteRx1Bit
 202  0055              		
 203  0055  3C00     R  		SZ		F_Parity_Ok
 204  0056  2800     R  		JMP		Stop_Deal					
 205  0057  3800     R  		SNZ		hijack_Rx_Parity_Count.0
 206  0058  2800     R  		JMP		Paritylow
 207  0059  2800     R  		JMP		ParityHigh
 208  005A              ParityHigh:	
 209  005A  3800     R  		SNZ		F_0or1Bit
 210  005B  2800     R  		JMP		_hijack_Parity_StopMode_Error
 211  005C  3000     R  		SET		F_Parity_Ok
 212  005D  2800     R  		JMP		_hijack_Parity_StopMode_RET					
 213  005E              ParityLow:		
 214  005E  3C00     R  		SZ		F_0or1Bit
 215  005F  2800     R  		JMP		_hijack_Parity_StopMode_Error
 216  0060  3000     R  		SET		F_Parity_Ok
 217  0061  2800     R  		JMP		_hijack_Parity_StopMode_RET			
 218  0062              Stop_Deal:
 219  0062  3400     R  		CLR		F_Parity_Ok
 220  0063  3800     R  		SNZ		F_0or1Bit
 221  0064  2800     R  		JMP		_hijack_Parity_StopMode_Error
 222  0065  3000     R  		SET		F_Stop_idleMode
 223  0066  0F02        		MOV		A,2
 224  0067  0080     R  		MOV		hijack_Idle_Count,A
 225  0068  1F00     R  		CLR		TEST_COUNT
 226  0069  3400     R  		CLR		F_Parity_StopMode				
 227  006A  2800     R  		JMP		_hijack_Parity_StopMode_RET
 228  006B              _hijack_Parity_StopMode_Error:
 229  006B  3000     R  		SET		F_hijack_Rx_Error
"File: hijack.asm    Assembler  Version 2.93      Page 5

 230  006C  0003        		RET	
 231  006D              _hijack_Parity_StopMode_RET:			
 232  006D  0003        		RET
 233  006E              _hijack_Parity_StopMode ENDP
 234  006E              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 235  006E              _hijack_PrepareMode PROC
 236  006E  3800     R  		SNZ		F_PrepareMode
 237  006F  0003        		RET
 238  0070  3800     R  		SNZ		F_CompleteRx1Bit
 239  0071  0003        		RET
 240  0072              ;		INC		TEST_COUNT2
 241  0072  3400     R  		CLR		F_CompleteRx1Bit
 242  0073              ;Idle		
 243  0073  3800     R  		SNZ		F_0or1Bit
 244  0074  0003        		RET
 245  0075  3400     R  		CLR		F_PrepareMode
 246  0076  3000     R  		SET		F_IdleMode
 247  0077  0003        		RET
 248  0078              _hijack_PrepareMode ENDP
 249  0078              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 250  0078              _hijack_StartIdleMode PROC
 251  0078  3800     R  		SNZ		F_IdleMode
 252  0079  0003        		RET
 253  007A              ;Idle		
 254  007A  3800     R  		SNZ		F_CompleteRx1Bit
 255  007B  0003        		RET
 256  007C  3400     R  		CLR		F_CompleteRx1Bit
 257  007D  1780     R  		SDZ		hijack_Idle_Count
 258  007E  2800     R  		JMP		$1
 259  007F              $0:		
 260  007F  3C00     R  		SZ		F_0or1Bit
 261  0080  2800     R  		JMP		$2
 262  0081  3400     R  		CLR		F_IdleMode
 263  0082  3000     R  		SET		F_ByteMode
 264  0083  0003        		RET
 265  0084              $2:		
 266  0084  3000     R  		SET		F_hijack_Rx_Error	;第四bit 還是1，錯誤
 267  0085  0003        		RET
 268  0086              $1:		
 269  0086  3C00     R  		SZ		F_0or1Bit		
 270  0087  0003        		RET						
 271  0088  3000     R  		SET		F_hijack_Rx_Error	;3bit 1 Idle 不夠
 272  0089  0003        		RET				
 273  008A              _hijack_StartIdleMode ENDP
 274  008A              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 275  008A              _hijack_ENDIdleMode PROC
 276  008A  3800     R  		SNZ		F_Stop_idleMode
 277  008B  0003        		RET
 278  008C  3800     R  		SNZ		F_CompleteRx1Bit
 279  008D  0003        		RET
 280  008E  3400     R  		CLR		F_CompleteRx1Bit
 281  008F  1480     R  		INC		TEST_COUNT
 282  0090  1780     R  		SDZ		hijack_Idle_Count
 283  0091  2800     R  		JMP		$1
 284  0092              $0:		
 285  0092  3800     R  		SNZ		F_0or1Bit
 286  0093  2800     R  		JMP		$2		
 287  0094  3400     R  		CLR		F_Stop_idleMode
 288  0095  3400     R  		CLR		F_hijack_Rx_Start
 289  0096  3000     R  		SET		Hijack_RxOk_Flag
"File: hijack.asm    Assembler  Version 2.93      Page 6

 290  0097  0003        		RET
 291  0098              $2:		
 292  0098  3000     R  		SET		F_hijack_Rx_Error	;第四bit 還是1，錯誤
 293  0099  0003        		RET
 294  009A              $1:		
 295  009A  3C00     R  		SZ		F_0or1Bit		
 296  009B  0003        		RET						
 297  009C  3000     R  		SET		F_hijack_Rx_Error	;3bit 1 Idle 不夠
 298  009D  0003        		RET					
 299  009E              _hijack_ENDIdleMode ENDP
 300  009E              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 301  009E              _hijack_Rx_Byte PROC
 302  009E  3800     R  		SNZ		F_ByteMode
 303  009F  0003        		RET
 304  00A0  3800     R  		SNZ		F_CompleteRx1Bit
 305  00A1  0003        		RET
 306  00A2  3400     R  		CLR		F_CompleteRx1Bit		
 307  00A3  3800     R  		SNZ		F_hijackstartOk
 308  00A4  2800     R  		JMP		$0
 309  00A5  2800     R  		JMP		hijack_Rx_ByteEnter
 310  00A6              $0:
 311  00A6  3800     R  		SNZ		F_0or1Bit
 312  00A7  2800     R  		JMP		$1
 313  00A8  3000     R  		SET		F_hijack_Rx_Error
 314  00A9  0003        		RET
 315  00AA              $1:
 316  00AA  3000     R  		SET		F_hijackstartOk
 317  00AB  0F10        		MOV		A,16
 318  00AC  0080     R  		MOV		hijack_Rx_Count,A
 319  00AD  1F00     R  		CLR		hijack_Receive_DataH
 320  00AE  1F00     R  		CLR		hijack_Receive_DataL
 321  00AF  1F00     R  		CLR		hijack_Rx_Parity_Count
 322  00B0  0003        		RET										
 323  00B1              hijack_Rx_ByteEnter:
 324  00B1  1780     R  		SDZ 	hijack_Rx_Count 	;16bit值是否已經讀取完成	
 325  00B2  2800     R  		JMP		hijack_Rx_Byte_LOOP
 326  00B3  3000     R  		SET		F_CompleteRx1Bit
 327  00B4  3000     R  		SET		F_Parity_StopMode	;進入下一個模式
 328  00B5  3400     R  		CLR		F_ByteMode			
 329  00B6  0003        		RET
 330  00B7              hijack_Rx_Byte_LOOP:
 331  00B7  340A        		CLR		C
 332  00B8  1A80     R  		RLC		hijack_Receive_DataL
 333  00B9  1A80     R  		RLC		hijack_Receive_DataH		
 334  00BA              		
 335  00BA  3800     R  		SNZ		F_0or1Bit
 336  00BB  2800     R  		JMP		hijack_Low
 337  00BC  2800     R  		JMP		hijack_High
 338  00BD              hijack_High:
 339  00BD  1480     R  		INC		hijack_Rx_Parity_Count
 340  00BE  3000     R  		SET		hijack_Receive_DataL.0
 341  00BF  2800     R  		JMP		hijack_Next_Bit
 342  00C0              hijack_Low:
 343  00C0  3400     R  		CLR		hijack_Receive_DataL.0
 344  00C1              hijack_Next_Bit:
 345  00C1  0003        		RET
 346  00C2              _hijack_Rx_Byte ENDP
 347  00C2              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 348  00C2              _hijack_Rx_1Bit PROC
 349  00C2  3A11        		SNZ		STMP0F
"File: hijack.asm    Assembler  Version 2.93      Page 7

 350  00C3  2800     R  		JMP		CCRA_interrupt
 351  00C4              CCRP_interrupt:					
 352  00C4  3611        		CLR		STMP0F
 353  00C5  1480     R  		INC		hijack_CCRP_count
 354  00C6  0700     R  		MOV		A,hijack_CCRP_count
 355  00C7  0C28        		XOR		A,hijack_Time_Out		
 356  00C8  390A        		SNZ		Z
 357  00C9  0003        		RET
 358  00CA  2800     R  		JMP		_hijack_Rx_1Bit_Error ;超出時間，錯誤
 359  00CB              CCRA_interrupt:
 360  00CB  3A91        		SNZ		STMA0F
 361  00CC  2800     R  		JMP		_hijack_Rx_1Bit_Error ;不是CCRA 中斷也不是CCRP中斷，錯誤
 362  00CD  3691        		CLR		STMA0F
 363  00CE              ;		INC		TEST_COUNT
 364  00CE  0F08        		MOV		A,00001000B
 365  00CF  0494        		XORM	A,PA
 366  00D0  3C00     R  		SZ		F_First_CCRA
 367  00D1  2800     R  		JMP		Second_CCRA
 368  00D2              First_CCRA:	;第一次CCRA中斷 上升沿									
 369  00D2  3000     R  		SET		F_First_CCRA
 370  00D3  072D        		MOV		A,STM0AH					;Save CCRA value
 371  00D4  0080     R  		MOV		high_CCRA1_H,A	
 372  00D5  072C        		MOV		A,STM0AL					
 373  00D6  0080     R  		MOV		high_CCRA1_L,A	
 374  00D7  0700     R  		MOV		A,hijack_CCRP_count
 375  00D8  0080     R  		MOV		hijack_Period_L,A			;保存CCRP 的計數值
 376  00D9  1F00     R  		CLR		hijack_CCRP_count
 377  00DA              ;		INC		TEST_COUNT
 378  00DA              ;計算週期
 379  00DA              ;N x 512-high_First_CCRA_Count + high_Second_CCRA_Count
 380  00DA              if stmCCRP_T==512
 381  00DA  0F09        		MOV		A,9
 382  00DB  0080     R  		MOV		hijack_temp_count1,A 		;根據CCRP 的值修改移位的值
 383  00DC              endif
 384  00DC              if stmCCRP_T==256
 385  00DC              		MOV		A,8
 386  00DC              		MOV		hijack_temp_count1,A 		;根據CCRP 的值修改移位的值
 387  00DC              endif
 388  00DC              $0:
 389  00DC  340A        		CLR		C 							;移位進行乘法運算
 390  00DD  1A80     R  		RLC		hijack_Period_L
 391  00DE  1A80     R  		RLC		hijack_Period_H	
 392  00DF  1780     R  		SDZ		hijack_temp_count1
 393  00E0  2800     R  		JMP		$0		
 394  00E1  340A        		CLR		C							
 395  00E2  0700     R  		MOV		A,high_CCRA1_L				;加上第二次取得的CCRA 的值
 396  00E3  0380     R  		ADDM	A,hijack_Period_L
 397  00E4  0700     R  		MOV		A,high_CCRA1_H
 398  00E5  1380     R  		ADCM	A,hijack_Period_H		
 399  00E6  340A        		CLR		C 
 400  00E7  0700     R  		MOV		A,hijack_Period_L			;減去第一次取得的 CCRA 的值
 401  00E8  0200     R  		SUB		A,high_CCRA2_L
 402  00E9  0080     R  		MOV		hijack_Period_L,A
 403  00EA  0700     R  		MOV		A,hijack_Period_H
 404  00EB  1200     R  		SBC		A,high_CCRA2_H
 405  00EC  0080     R  		MOV		hijack_Period_H,A		
 406  00ED              
 407  00ED  2800     R  		JMP		hijack_Period					
 408  00EE              Second_CCRA:;第二次CCRA中斷 上升沿
 409  00EE  3400     R  		CLR		F_First_CCRA
"File: hijack.asm    Assembler  Version 2.93      Page 8

 410  00EF  072D        		MOV		A,STM0AH					;Save CCRA value
 411  00F0  0080     R  		MOV		high_CCRA2_H,A	;
 412  00F1  072C        		MOV		A,STM0AL					;
 413  00F2  0080     R  		MOV		high_CCRA2_L,A	;
 414  00F3  0700     R  		MOV		A,hijack_CCRP_count
 415  00F4  0080     R  		MOV		hijack_Period_L,A			;保存CCRP 的計數值
 416  00F5  1F00     R  		CLR		hijack_CCRP_count
 417  00F6              ;		INC		TEST_COUNT		
 418  00F6              ;計算週期
 419  00F6              ;N x 512-high_First_CCRA_Count + high_Second_CCRA_Count
 420  00F6              if stmCCRP_T==512
 421  00F6  0F09        		MOV		A,9
 422  00F7  0080     R  		MOV		hijack_temp_count1,A 		;根據CCRP 的值修改移位的值
 423  00F8              endif
 424  00F8              if stmCCRP_T==256
 425  00F8              		MOV		A,8
 426  00F8              		MOV		hijack_temp_count1,A 		;根據CCRP 的值修改移位的值
 427  00F8              endif
 428  00F8              $0:
 429  00F8  340A        		CLR		C 							;移位進行乘法運算
 430  00F9  1A80     R  		RLC		hijack_Period_L
 431  00FA  1A80     R  		RLC		hijack_Period_H	
 432  00FB  1780     R  		SDZ		hijack_temp_count1
 433  00FC  2800     R  		JMP		$0		
 434  00FD  340A        		CLR		C							
 435  00FE  0700     R  		MOV		A,high_CCRA2_L				;加上第二次取得的CCRA 的值
 436  00FF  0380     R  		ADDM	A,hijack_Period_L
 437  0100  0700     R  		MOV		A,high_CCRA2_H
 438  0101  1380     R  		ADCM	A,hijack_Period_H		
 439  0102  340A        		CLR		C 
 440  0103  0700     R  		MOV		A,hijack_Period_L			;減去第一次取得的 CCRA 的值
 441  0104  0200     R  		SUB		A,high_CCRA1_L
 442  0105  0080     R  		MOV		hijack_Period_L,A
 443  0106  0700     R  		MOV		A,hijack_Period_H
 444  0107  1200     R  		SBC		A,high_CCRA1_H
 445  0108  0080     R  		MOV		hijack_Period_H,A		
 446  0109              hijack_Period:		
 447  0109              ;判斷是否是0
 448  0109              hijack_Period_0:
 449  0109              ;		INC		TEST_COUNT				
 450  0109  0700     R  		MOV		A,hijack_Period_H
 451  010A  0C05        		XOR		A,5					;hijack_Period0_Max 高八位
 452  010B  390A        		SNZ		Z
 453  010C  2800     R  		JMP		hijack_Period_1				;高Byte不相等，判斷是否為Bit 1
 454  010D              ;高位相等，判斷低八位是否在容差範圍內		
 455  010D  0700     R          MOV     A,hijack_Period_L
 456  010E  0AD5                SUB     A,94H +Tolerance 
 457  010F  3C0A                SZ      C		
 458  0110  2800     R  		JMP		_hijack_Rx_1Bit_Error		;週期太大錯誤
 459  0111  0700     R          MOV     A,hijack_Period_L
 460  0112  0A53                SUB     A,94H - Tolerance 
 461  0113  380A                SNZ      C			
 462  0114  2800     R  		JMP		_hijack_Rx_1Bit_Error		;週期太小錯誤
 463  0115  3400     R  		CLR		F_0or1Bit					;由週期判斷為Bit 0
 464  0116  2800     R  		JMP		_hijack_Rx_1Bit_RET
 465  0117              hijack_Period_1:	;是否在294H~316H之間		
 466  0117  0700     R  		MOV		A,hijack_Period_H
 467  0118  0C02        		XOR		A,2					;hijack_Period1_Max 高八位
 468  0119  3D0A        		SZ		Z
 469  011A  2800     R  		JMP		highByte2				;==2，判斷是否在294~300之間
"File: hijack.asm    Assembler  Version 2.93      Page 9

 470  011B              ;是否==3
 471  011B  0700     R  		MOV		A,hijack_Period_H
 472  011C  0C03        		XOR		A,3					;hijack_Period1_Max 高八位
 473  011D  3D0A        		SZ		Z
 474  011E  2800     R  		JMP		highByte3	
 475  011F  2800     R  		JMP		_hijack_Rx_1Bit_Error	;高Byte既不是2也不是3，錯誤
 476  0120              highByte3: ;300~316H
 477  0120  0700     R          MOV     A,hijack_Period_L
 478  0121  0A16                SUB     A,016H
 479  0122  3C0A                SZ      C
 480  0123  2800     R          JMP		_hijack_Rx_1Bit_Error
 481  0124  2800     R          JMP		thisis1		
 482  0125              highByte2:		
 483  0125              ;294H~300H之間
 484  0125  0700     R          MOV     A,hijack_Period_L
 485  0126  0A94                SUB     A,094H
 486  0127  380A                SNZ      C
 487  0128  2800     R          JMP		_hijack_Rx_1Bit_Error
 488  0129  2800     R          JMP		thisis1
 489  012A              thisis1:
 490  012A  3000     R  		SET		F_0or1Bit
 491  012B  2800     R  		JMP		_hijack_Rx_1Bit_RET				
 492  012C              
 493  012C              _hijack_Rx_1Bit_RET:
 494  012C  3000     R  		SET		F_CompleteRx1Bit		
 495  012D  0003        		RET
 496  012E              _hijack_Rx_1Bit_Error:
 497  012E  3000     R  		SET		F_hijack_Rx_Error		;CCRP 連續發生的次數超過設定值(週期時間太長 Error)
 498  012F  0003        		RET								;置錯誤標誌位
 499  0130              _hijack_Rx_1Bit ENDP
 500  0130              
 501  0130              
 502  0130              
 503  0130              	
 504  0130              
 505  0130              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 506  0130              _hijack_init PROC
 507  0130              if stmCCRP_T==512
 508  0130  0F04        		MOV		A,00000100B	;4/fsys  512 CCRP interrput
 509  0131  00A8        		MOV		STM0C0,A
 510  0132              endif
 511  0132              if stmCCRP_T==256
 512  0132              		MOV		A,00000010B	;4/fsys  512 CCRP interrput
 513  0132              		MOV		STM0C0,A
 514  0132              endif	
 515  0132  0F40        		MOV		A,01000000B	;輸入捕捉模式、上升沿觸發、P 清除time
 516  0133  00A9        		MOV		STM0C1,A
 517  0134              		
 518  0134  3315        		SET		hijack_channel_L_IO
 519  0135  3714        		CLR		hijack_channel_L
 520  0136              		
 521  0136  3618        		CLR		STP0IPS		;STP0I on PA6
 522  0137              		
 523  0137  3091        		SET		STMA0E		;開啟Timer 輸入捕捉模式中斷
 524  0138  3011        		SET		STMP0E
 525  0139  300F        		SET		MF0E
 526  013A  360F        		CLR		MF0F
 527  013B  3691        		CLR		STMA0F
 528  013C  3611        		CLR		STMP0F
 529  013D  31A8        		SET		ST0ON
"File: hijack.asm    Assembler  Version 2.93      Page 10

 530  013E  300E        		SET		EMI
 531  013F  0003        		RET
 532  0140              _hijack_init ENDP
 533  0140              
 534  0140              
 535  0140              
 536  0140              
 537  0140              ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 538  0140              _hijack_Send_Byte PROC
 539  0140              ;		local temp  D
 540  0140  3514         		CLR		hijack_channel_MIC
 541  0141  0F08         		MOV		A,8 ;SET 8 BIT COUNTER
 542  0142  0080     R   		MOV		hijack_temp_count1,A
 543  0143              hijack_send_8bitloop:
 544  0143  3C00     R  		SZ		hijack_temp_Byte.7
 545  0144  2800     R  		JMP		hijack_send_high
 546  0145  2800     R  		JMP		hijack_send_low
 547  0146              hijack_send_high:
 548  0146  1480     R  		INC		hijack_temp_count2		;奇校驗
 549  0147  3114        		SET		hijack_channel_MIC
 550  0148              		DELAY	fskDelaycount1/3		;Delay延遲了3倍，so fskDelaycount0/3為正確值
 551  014C  3514        		CLR		hijack_channel_MIC
 552  014D              		DELAY	fskDelaycount1/3		;Delay延遲了3倍，so fskDelaycount0/3為正確值
 553  0151  2800     R  		JMP		hijack_send_Next_Bit	
 554  0152              hijack_send_low:		
 555  0152  3114        		SET		hijack_channel_MIC	;
 556  0153              		DELAY	fskDelaycount0/3		;Delay延遲了3倍，so fskDelaycount0/3為正確值
 557  0157  3514        		CLR		hijack_channel_MIC
 558  0158              		DELAY	fskDelaycount0/3		;Delay延遲了3倍，so fskDelaycount0/3為正確值 		
 559  015C              hijack_send_Next_Bit:
 560  015C  1880     R  		RL		hijack_temp_Byte
 561  015D  1780     R  		SDZ		hijack_temp_count1
 562  015E  2800     R  		JMP		hijack_send_8bitloop
 563  015F              
 564  015F              _hijack_Send_Byte_RET:
 565  015F  0003        		RET 
 566  0160              _hijack_Send_Byte ENDP
 567  0160              ;;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@	
 568  0160              hijack_send_odd_Bit PROC
 569  0160  3C00     R  		SZ		hijack_temp_count2.0
 570  0161  2800     R  		JMP		hijack_send_odd_Bit_Low
 571  0162              ;		JMP		hijack_odd_Bit_high	
 572  0162              hijack_send_odd_Bit_high:
 573  0162  3114        		SET		hijack_channel_MIC
 574  0163              		DELAY	fskDelaycount1/3		;Delay延遲了3倍，so fskDelaycount0/3為正確值
 575  0167  3514        		CLR		hijack_channel_MIC
 576  0168              		DELAY	fskDelaycount1/3		;Delay延遲了3倍，so fskDelaycount0/3為正確值
 577  016C  2800     R  		JMP		hijack_send_odd_Bit_RET		
 578  016D              hijack_send_odd_Bit_Low:
 579  016D  3114        		SET		hijack_channel_MIC	;
 580  016E              		DELAY	fskDelaycount0/3		;Delay延遲了3倍，so fskDelaycount0/3為正確值
 581  0172  3514        		CLR		hijack_channel_MIC
 582  0173              		DELAY	fskDelaycount0/3		;Delay延遲了3倍，so fskDelaycount0/3為正確值
 583  0177              hijack_send_odd_Bit_RET:
 584  0177  0003        		RET 							
 585  0178              hijack_send_odd_Bit ENDP
 586  0178              ;;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 587  0178              _hijack_Send_Bias PROC
 588  0178              ;用於先建立bias
 589  0178  0F0C         		MOV		A,12 ;SET 8 BIT COUNTER
"File: hijack.asm    Assembler  Version 2.93      Page 11

 590  0179  0080     R   		MOV		hijack_temp_count1,A
 591  017A              $1:		
 592  017A  3114        		SET		hijack_channel_MIC	;
 593  017B              		DELAY	fskDelaycount0/3		;Delay延遲了3倍，so fskDelaycount0/3為正確值
 594  017F  3514        		CLR		hijack_channel_MIC
 595  0180              		DELAY	fskDelaycount0/3		;Delay延遲了3倍，so fskDelaycount0/3為正確值 		
 596  0184  1780     R  		SDZ		hijack_temp_count1
 597  0185  2800     R  		JMP		$1					
 598  0186  0003        		RET
 599  0187              _hijack_Send_Bias ENDP
 600  0187              ;;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 601  0187              _hijack_Send_Idle PROC
 602  0187              ;,3bit 1頻率的idle信號，用於信號發送的開始和結束
 603  0187  0F03         		MOV		A,3 					;SET 8 BIT COUNTER
 604  0188  0080     R   		MOV		hijack_temp_count1,A
 605  0189              $1: 		
 606  0189  3114        		SET		hijack_channel_MIC	;
 607  018A              		DELAY	fskDelaycount1/3		;Delay延遲了3倍，so fskDelaycount0/3為正確值
 608  018E  3514        		CLR		hijack_channel_MIC
 609  018F              		DELAY	fskDelaycount1/3		;Delay延遲了3倍，so fskDelaycount0/3為正確值
 610  0193  1780     R  		SDZ		hijack_temp_count1
 611  0194  2800     R  		JMP		$1
 612  0195  0003        		RET	
 613  0196              _hijack_Send_Idle ENDP
 614  0196              ;;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 615  0196              _hijack_Send_Start PROC
 616  0196              ;1bit 0頻率 用於開始信號,		
 617  0196  3114        		SET		hijack_channel_MIC	;
 618  0197              		DELAY	fskDelaycount0/3		;Delay延遲了3倍，so fskDelaycount0/3為正確值
 619  019B  3514        		CLR		hijack_channel_MIC
 620  019C              		DELAY	fskDelaycount0/3		;Delay延遲了3倍，so fskDelaycount0/3為正確值
 621  01A0  0003        		RET	
 622  01A1              _hijack_Send_Start ENDP
 623  01A1              ;;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 624  01A1              _hijack_Send_Stop PROC
 625  01A1              ;1bit 1頻率用於結束信號,		
 626  01A1  3114        		SET		hijack_channel_MIC	;
 627  01A2              		DELAY	fskDelaycount1/3		;Delay延遲了3倍，so fskDelaycount0/3為正確值
 628  01A6  3514        		CLR		hijack_channel_MIC
 629  01A7              		DELAY	fskDelaycount1/3		;Delay延遲了3倍，so fskDelaycount0/3為正確值
 630  01AB  0003        		RET	
 631  01AC              _hijack_Send_Stop ENDP


        0 Errors, 0 Warnings